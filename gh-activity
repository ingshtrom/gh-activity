#!/usr/bin/env bash
set -e

#echo "Hello gh-gprl!"

# Snippets to help get started:

# Determine if an executable is in the PATH
# if ! type -p ruby >/dev/null; then
#   echo "Ruby not found on the system" >&2
#   exit 1
# fi

# Pass arguments through to another command
# gh issue list "$@" -R cli/cli

# Using the gh api command to retrieve and format information
#QUERY='
#query($endCursor: String) {
#  viewer {
#    repositories(first: 100, after: $endCursor) {
#      nodes {
#        nameWithOwner
#        stargazerCount
#      }
#    }
#  }
#}
#'
MY_PRS_QUERY='
{
  search(first: 100, type: ISSUE, query: "author:@me state:open is:pr org:docker") {
    issueCount
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      node {
        ... on PullRequest {
          updatedAt
          createdAt
          title
          url,
          repository {
            name
          }
        }
      }
    }
  }
}
'
MY_PRS_TEMPLATE='
{{- range $pr := .data.search.edges -}}
  {{- printf "%s - %v\n" $pr.node.title $pr.node.url -}}
{{- end -}}
'

MY_REVIEWS_QUERY='
{
  search(first: 100, type: ISSUE, query: "is:pr is:open sort:updated-desc draft:false review-requested:@me org:docker") {
    issueCount
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      node {
        ... on PullRequest {
          updatedAt
          createdAt
          title
          url,
          repository {
            name
          }
        }
      }
    }
  }
}
'
MY_REVIEWS_TEMPLATE='
{{- range $pr := .data.search.edges -}}
  {{- printf "%s - %v\n" $pr.node.title $pr.node.url -}}
{{- end -}}
'


echo "--------------------------------------------------"
echo;
echo "# Current Pull Requests"
echo;
gh api graphql -f query="${MY_PRS_QUERY}" --paginate --template="${MY_PRS_TEMPLATE}"
echo;
echo "--------------------------------------------------"
echo;
echo "# Current Review Requests"
echo;

gh api graphql -f query="${MY_REVIEWS_QUERY}" --paginate --template="${MY_REVIEWS_TEMPLATE}"
echo;
echo "--------------------------------------------------"
